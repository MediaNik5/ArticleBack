name: prod-deploy

on:
  push:
    branches:
      - 'master'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Add comgrid.ru.jks
        uses: timheuer/base64-to-file@v1.1
        with:
          fileName: 'comgrid.ru.jks'
          fileDir: './src/main/resources/'
          encodedString: ${{ secrets.COMGRID_RU_JKS }}
      - name: Build with Maven
        run: mvn package -DskipTests
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/article-back:latest
      #          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/comgrid:buildcache
      #          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/comgrid:buildcache,mode=max
      - name: Deploying on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          password: ${{ secrets.HOST_PASSWORD }}
          port: ${{ secrets.HOST_PORT }}
          script: |
            cd /article-back
            docker-compose pull
            docker-compose up -d
